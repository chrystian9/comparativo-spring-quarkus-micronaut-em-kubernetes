# Estágio 1: Construção do projeto Java
FROM maven:3.8.3-openjdk-17 AS DEPS

WORKDIR /build

# Copiar arquivos de configuração Maven
COPY ../pom.xml pom.xml
COPY ../entrypoints/pom.xml ./entrypoints/
COPY ../dataproviders/pom.xml ./dataproviders/
COPY ../core/pom.xml ./core/
COPY ../core/domain/pom.xml ./core/domain/
COPY ../core/usecase/pom.xml ./core/usecase/

# Resolve as dependências
RUN mvn -B -e -C org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline

# Copie as dependências do estágio DEPS com a vantagem
# de usar o cache de camadas do Docker. Se algo der errado a partir desta
# linha, todas as dependências do estágio DEPS já foram baixadas e
# armazenadas nas camadas do Docker.
FROM maven:3.8.3-openjdk-17 AS BUILDER

WORKDIR /build

COPY --from=deps /root/.m2 /root/.m2
COPY --from=deps /build /build
COPY entrypoints/src /build/entrypoints/src
COPY dataproviders/src /build/dataproviders/src
COPY core /build/core

# Compila o projeto
RUN mvn -B -e package -Dnative -DskipTests=true

# Estágio 2: Usa uma imagem JRE mínima para executar o aplicativo
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.8

# Copia os arquivos JAR gerados do primeiro estágio
COPY --from=builder /build/entrypoints/target/*-runner /work/application

EXPOSE 8080

ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]